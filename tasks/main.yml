---
# File: tasks/main.yml - Main tasks for Vault

- name: Check distribution compatibility
  fail:
    msg: "{{ ansible_distribution }} is not supported by this role"
  when: ansible_distribution not in ['RedHat', 'CentOS', 'Debian', 'Ubuntu']

- name: Fail if not a new release of Red Hat / CentOS
  fail:
    msg: "{{ ansible_distribution_version }} is not an acceptable version of {{ ansible_distribution }} for this role"
  when: ansible_distribution in ['RedHat', 'CentOS'] and ansible_distribution_version|version_compare(7, '<')

- name: Fail if not a new release of Debian
  fail:
    msg: "{{ ansible_distribution_version }} is not an acceptable version of {{ ansible_distribution }} for this role"
  when: ansible_distribution == "Debian" and ansible_distribution_version|version_compare(8.5, '<')

- name: Fail if not a new release of Ubuntu
  fail:
    msg: "{{ ansible_distribution_version }} is not an acceptable version of {{ ansible_distribution }} for this role"
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version|version_compare(13.04, '<')

- name: Create cluster groupings
  group_by: "key=os_{{ ansible_os_family }}"

- name: Create cluster groupings
  group_by: "key={{ vault_node_role }}"

- name: "Add Vault user"
  user:
    name: vault
    comment: "Vault user"
    uid: 1043
    group: bin

- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Install specified packages  
  include: install.yml

- name: Enable non root mlock capability
  command: "setcap cap_ipc_lock=+ep {{ vault_bin_path }}/vault"

- name: Create directories
  file:
    dest: "{{ item }}"
    state: directory
    owner: "{{ vault_user }}"
    group: "{{ vault_group}}"
  with_items:
    - /opt/vault
    - /var/vault
    - /var/log/vault
    - /var/run/vault
    - /etc/vault.d

- name: Vault server configuration
  template:
    src: vault_main.hcl.j2
    dest: "{{ vault_config_path }}/vault_main.hcl"

- name: SYSV init script
  template:
    src: vault_sysvinit.j2
    dest: /etc/init.d/vault
    owner: root
    group: root
    mode: 0755
  when: not ansible_distribution == "Debian"

- name: Debian init script
  template:
    src: vault_debian.init.j2
    dest: /etc/init.d/vault
    owner: root
    group: root
    mode: 0755
  when: ansible_distribution == "Debian" and ansible_distribution_major_version|int <= 7

- name: systemd script
  template:
    src: vault_systemd.service.j2
    dest: /lib/systemd/system/vault.service
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution_major_version|int >= 7

- name: Start Vault
  service:
    name: vault
    state: started
    enabled: yes

- name: Vault running?
  wait_for:
    host: "{{ vault_address}}"
    port: 8200
    delay: 10
